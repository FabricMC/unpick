plugins {
    id 'java-library'
    id 'maven-publish'
    id 'eclipse'
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    group = 'net.fabricmc.unpick'

    def ENV = System.getenv()
    version = "2.3.0"
    version = version + (ENV.GITHUB_ACTIONS ? "" : "+local")

    repositories {
        mavenCentral()
    }

    dependencies {
        api 'org.ow2.asm:asm:9.6'
        api 'org.ow2.asm:asm-tree:9.6'
        implementation 'org.ow2.asm:asm-commons:9.6'
        implementation 'org.ow2.asm:asm-util:9.6'

        // Use JUnit test framework
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.+'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.+'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.+'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.+'
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"

        if (JavaVersion.current().isJava9Compatible()) {
            it.options.release = 8
        }
    }

    java {
        withSourcesJar()
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }

    publishing {
        repositories {
            if (ENV.MAVEN_URL) {
                repositories.maven {
                    name "fabric"
                    url ENV.MAVEN_URL
                    credentials {
                        username ENV.MAVEN_USERNAME
                        password ENV.MAVEN_PASSWORD
                    }
                }
            }
        }
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact(javadocJar)
            }
        }
    }
}

dependencies {
    implementation project(':unpick-format-utils')
}
